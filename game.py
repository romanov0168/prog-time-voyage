import pandas as pd
import os

def ask_question(fun):
    question = fun['question'].iloc[0]
    print(question)
    count = 0 #Подсчет количества вариантов ответа
    for i in range(1, 5):
        if fun['v' + str(i)].iloc[0] != '-':
            if fun['v2'].iloc[0] != '-': #Если вариант ответа №2 не пуст, то вывести варианты ответа
                print(str(i) + '. ' + fun['v' + str(i)].iloc[0])
                count += 1
    if fun['isgameover'].iloc[0] == 1:
        return -1
    if fun['v2'].iloc[0] == '-': #Если вариант ответа №2 пуст, автоматически выбирать вариант №1
        answer = '1'
    else:
        # print(count)
        answer = input('Введите вариант ответа:\n')
        # print('')  #Пропуск для читабельности
        os.system('cls')
        if answer != '0' and answer != '1' and answer != '2' and answer != str(count - 1) and answer != str(count): #Работает для количества вариантов от 2 до 4
            os.system('cls')
            print('\nТакой вариант ответа отсутствует.') #МОЖНО ЗАПУСТИТЬ ОПЯТЬ ask_question(fun) ВМЕСТО menu(), НО ЕСТЬ ПРОБЛЕМЫ!
            menu()
        if answer == '0':
            # print('')  #Пропуск для читабельности
            os.system('cls')
            menu()
    return int(fun['numv' + answer].iloc[0])

def game():
    print('\nЧтобы продвигаться по сюжету, вам необходимо выбирать подходящие варианты ответа. Для выхода в меню укажите «0» в любое поле ввода.\n')
    print('Предисловие. «А было бы не плохо сейчас отправиться в какое-нибудь обширное путешествие», - подумал однажды господин...')
    pro = input('Придумайте и укажите фамилию господина:\n')  #protagonist - главный герой
    os.system('cls')
    if pro == '0':
        # print('')  #Пропуск для читабельности
        os.system('cls')
        menu()
    pro = pro[0:99].lower()
    pro = pro[0].upper() + pro[1:99].lower()
    if '-' in pro:
        pro = pro[0:pro.rfind('-')] + '-' + pro[pro.rfind('-') + 1].upper() + pro[pro.rfind('-') + 2:99]
    print('\n...подумал однажды господин ' + pro, 'одним из первых теплых весенних вечеров 1918 года. Он посмотрел в окно своего небольшого дома, и как-то очень быстро убедился, или убедил сам себя, что сейчас для этого настало самое время. «Побывать в новых странах, городах, познакомиться с новыми людьми - звучит здорово. Правда, как-то странно мне думать об этом, ранее я не припомню, чтобы у меня возникало желание путешествовать», - так продолжал развивать мысль господин в своей голове.')
    print(
        '\n«Даа! - вдруг воскликнул он вслух. - и все это, желательно, не затягивать до лета. Ведь летом о посещении южных стран придется забыть. Ну не сможет же ни один нормальный человек терпеть эту ужасную жару в 40, или даже 50 градусов. Впрочем, если запастись прохладительными напитками, возможно... Да, нет-нет, невозможно!». Подобные рассуждения могли длиться бесконечно, однако, уже минут через 20 они были прерваны словами: «Что ж, сейчас, или никогда!». «А какие, собственно есть варианты?», - спросил тогда мужчина сам у себя. В тот день до ночи ' + pro,
        'искал, куда же он может отправиться самостоятельно, куда взять билет. Искал у себя дома на картах, в газетах, но ничего, чтобы его заинтересовало не нашел.')
    print(
        '\nНа следующее утро его желание найти что-нибудь подходящие только усилилось. Пока что, это желание можно было назвать чисто спортивным интересом. Вдруг наш гражданин вспомнил о своем давнем знакомом, работающем в порту города...')
    cit = input('Придумайте и укажите название города:\n')  #city - город (отправления)
    os.system('cls')
    if cit == '0':
        # print('')  #Пропуск для читабельности
        os.system('cls')
        menu()
    cit = cit[0:99].lower()
    cit = cit[0].upper() + cit[1:99].lower()
    if '-' in cit:
        cit = cit[0:cit.rfind('-')] + '-' + cit[cit.rfind('-') + 1].upper() + cit[cit.rfind('-') + 2:99]
    print(
        '\n...знакомом, работающем в порту города ' + cit + ', который, кажется, был ему должен и обещал решить любой его вопрос. ' + pro,
        'решил не предупреждать этого знакомого о своем прибытии, а навестить его неожиданно на рабочем месте. Как оказалось, наш герой прибыл как раз вовремя - в начале рабочего дня, когда работа там только начиналась.')
    fam = input('Придумайте и укажите фамилию знакомого:\n')  #familiar - знакомый
    os.system('cls')
    if fam == '0':
        # print('')  #Пропуск для читабельности
        os.system('cls')
        menu()
    fam = fam[0:99].lower()
    fam = fam[0].upper() + fam[1:99].lower()
    if '-' in fam:
        fam = fam[0:fam.rfind('-')] + '-' + fam[fam.rfind('-') + 1].upper() + fam[fam.rfind('-') + 2:99]
    print(
        '\nЗнакомого звали мистер ' + fam + '. Во время встречи он сразу предложил пару неплохих вариантов путешествия, а покопавшись в своем блокноте - нашел еще несколько. Но все они были крайне банальны по сравнению с представительским рейсом через всю Европу к берегам города...')
    cit2 = input('Придумайте и укажите, к берегам какого города шел рейс:\n')  #city2 - город (назначения)
    os.system('cls')
    if cit2 == '0':
        # print('')  #Пропуск для читабельности
        os.system('cls')
        menu()
    cit2 = cit2[0:99].lower()
    cit2 = cit2[0].upper() + cit2[1:99].lower()
    if '-' in cit2:
        cit2 = cit2[0:cit2.rfind('-')] + '-' + cit2[cit2.rfind('-') + 1].upper() + cit2[cit2.rfind('-') + 2:99]
    print(
        '\n...по сравнению с представительским рейсом через всю Европу к берегам города ' + cit2 + ' уже на следующей неделе.')
    print(
        '\nИ когда был найден этот самый идеальный во всем вариант, думать уже не представлялось возможным, следовало бы воспользоваться своим положением перед знакомым и начинать искать билеты. Так и было сделано. Пришлось знатно потрудиться, чтобы найти место на рейсе такого уровня, но мистер ' + fam + ' все же смог договориться.\n')
    x = 2
    while x != -1:
        fun = df[x - 1: x]
        x = ask_question(fun)
        print('')  #Пропуск для читабельности
    menu()

def search_easter_eggs():
    tot = 5  #total - всего пасхалок
    fou = 0  #found - найдено пасхалок
    print('\nВсего пасхалок в игре ' + str(
        tot) + '. Найдите их все и докажите, что вы настоящий пасхантер! Если вы больше не нашли пасхалок, укажите «0» в поле ввода для завершения и выхода в меню.')
    eas1 = 'господин из сан-франциско'
    eas2 = 'мистер шок'
    eas3 = 'волан-де-морт'
    eas4 = 'гудини'
    eas5 = 'кларк'
    gue1 = False #guessed - угадан
    gue2 = False
    gue3 = False
    gue4 = False
    gue5 = False
    while fou != tot:
        eas = input('Введите пасхалку:\n')  #easter eggs - пасхалка
        # print('')  #Пропуск для читабельности
        os.system('cls')
        eas = eas[0:99].lower()
        if eas == '0' and fou == 0:
            print('\nВы не нашли ни одной пасхалки(. Попробуйте пройти игру еще раз и повнимательнее.')
            fou = tot
        elif eas == '0' and fou == 1:
            print('\nВы нашли ' + str(fou) + ' пасхалкy. Неплохо. А сможете найти еще?')
            fou = tot
        elif eas == '0':
            print('\nВы нашли ' + str(fou) + ' пасхалки. Это круто!) Может быть, тогда вы сможете найти все ' + str(tot) + '?')
            fou = tot
        elif eas == eas1 and gue1 == True:
            print('\nВы ее уже называли.\n')
        elif eas == eas2 and gue2 == True:
            print('\nВы ее уже называли.\n')
        elif eas == eas3 and gue3 == True:
            print('\nВы ее уже называли.\n')
        elif eas == eas4 and gue4 == True:
            print('\nВы ее уже называли.\n')
        elif eas == eas5 and gue5 == True:
            print('\nВы ее уже называли.\n')
        else:
            if eas == eas1:
                fou += 1
                gue1 = True
                print('\n+1 к найденым пасхалкам.\n')
            elif eas == eas2:
                fou += 1
                gue2 = True
                print('\n+1 к найденым пасхалкам.\n')
            elif eas == eas3:
                fou += 1
                gue3 = True
                print('\n+1 к найденым пасхалкам.\n')
            elif eas == eas4:
                fou += 1
                gue4 = True
                print('\n+1 к найденым пасхалкам.\n')
            elif eas == eas5:
                fou += 1
                gue5 = True
                print('\n+1 к найденым пасхалкам.\n')
            else:
                print('\nТакая пасхалка отсутствует в игре.\n')
            if fou == tot:
                print('Вы нашли все пасхалки и удостоены звания TRUE-ПАСХАНТЕРА!')
    # print('')  #Пропуск для читабельности
    menu()

def menu():
    print('\nМеню:\n1. Игра.\n2. Поиск пасхалок.\n3. Выход.')
    rep = input('Введите вариант ответа:\n')  #reply - ответ
    # print('')  #Пропуск для читабельности
    os.system('cls')
    if rep == '1':
        os.system('cls')
        game()
    elif rep == '2':
        os.system('cls')
        search_easter_eggs()
    elif rep == '3':
        exit()
    else:
        os.system('cls')
        print('\nТакой пункт отсутствует в меню.')
        menu()

df = pd.read_csv("game.csv", encoding='cp1251', sep='|')
print('') #Пропуск для читабельности
fun = df[0:1]
x = ask_question(fun)
if x == -1:
    exit()
menu()
